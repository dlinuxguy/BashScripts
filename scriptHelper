#########################################
# Author ChintanM                       #
# Version 4.0                           #
#########################################

ul='\u250c'
hr='\u2500'
ur='\u2510'
vr='\u2502'
ll='\u2514'
lr='\u2518'
nl='\n'

export PATH=$PATH:/u/unixutl/bin

debug=$[ $debug + 0 ]

function echod
{

        if [ $debug -eq 1 ]
        then
                echo "$1" >/dev/stderr
        fi
}

function echof
{
        EOL=`tput cols`
        while [ $EOL -gt 0 ]
        do
                echo -en "$1"
                EOL=$[ $EOL - 1 ]
        done
        echo ""
}

function plusplus()
{
        local i=$[ $1 + 1 ]
        eval counter="'$i'"
}

function justWait()
{
        waitTime=$2
        waitMSG=$1
        echo ""
        while [ $waitTime -gt 0 ];
        do
                echo "[$waitMSG "'-'" ]"; tput cuu1; sleep 0.25
                echo "[$waitMSG "'\'" ]"; tput cuu1; sleep 0.25
                echo "[$waitMSG "'|'" ]"; tput cuu1; sleep 0.25
                echo "[$waitMSG "'/'" ]"; tput cuu1; sleep 0.25

                waitTime=$[ $waitTime - 1 ]
        done
        echo ""
}

function Timer()
{
        waitMSG=$1
        echo ""
        while [ 1 ];
        do
                echo " $waitMSG ["'-'"]"; tput cuu1; sleep 0.25
                echo " $waitMSG ["'\'"]"; tput cuu1; sleep 0.25
                echo " $waitMSG ["'|'"]"; tput cuu1; sleep 0.25
                echo " $waitMSG ["'/'"]"; tput cuu1; sleep 0.25

                waitTime=$[ $waitTime - 1 ]
        done
        echo ""

}

function startTimer()
{
        Timer "$1" &
        timerPID=$!
        return $timerPID

}

function stopTimer()
{
        local timerPID=$1
        echo ""
        echod "Killing $timerPID"
        exec 2>/dev/null
        kill $timerPID
        exec 2
        echod "$? Timer stopped"
}

function createP()
{
        echod "Executing \"$1\""
        $1 &
        PID=$!;
        PIDS[$PID]=started;
}

function printP()
{
        checkP
        for i in ${!PIDS[@]};
        do
                echo "PID $i is ${PIDS[$i]}";
        done;
}
function checkP()
{
        declare -i completed=0
        for i in ${!PIDS[@]};
        do
                pstatus=${PIDS[$i]};
                if [ "$pstatus" == "started" ] || [ "$pstatus" == "running" ];
                then
                        if [ -d "/proc/$i" ];
                        then
                                PIDS[$i]=running;
                                completed=$completed+1
                        else
                                unset PIDS[$i]
                        fi;
                fi;
        done;
        return $completed
}

function waitTillP()
{
        timerPID=0
        if [ "$1" != "" ]
        then
                startTimer "$1"
        fi
        declare -i completed=1
        while [ $completed -gt 0 ]
        do
                checkP
                completed=$?
                echod "$completed processe running"
                sleep 1

        done
        if [ $timerPID -gt 0 ]
        then
                stopTimer $timerPID
        fi
}
############# End of script ############################
